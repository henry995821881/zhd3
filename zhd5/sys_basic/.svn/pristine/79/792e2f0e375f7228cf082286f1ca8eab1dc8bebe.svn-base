package com.xyscm.sys.basic.controller;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.xyscm.sys.basic.common.constant.ErrorCode;
import com.xyscm.sys.basic.common.exception.BaseException;
import com.xyscm.sys.basic.common.util.BasicResult;
import com.xyscm.sys.basic.common.util.DateUtil;
import com.xyscm.sys.basic.common.util.MessageSourceUtil;
import com.xyscm.sys.basic.common.util.PageJson;
import com.xyscm.sys.basic.model.BasicEmployee;
import com.xyscm.sys.basic.model.BasicOrg;
import com.xyscm.sys.basic.service.BasicOrgService;
import com.xyscm.sys.basic.vo.BasicOrgVo;

@Controller
public class BasicOrgController{

	@Autowired
	private BasicOrgService basicOrgService;
	
	private static final Logger logger = LoggerFactory.getLogger(BasicEmployeeController.class.getName());
	
	@RequestMapping("/orgManage")
	public String DeptManage(ServletRequest request,ServletResponse response){
		return "orgManage/orgManage";
	}
	
	
	/**
	 * 新增机构
	 * @return
	 */
	@RequestMapping("/orgManage/add")
	@ResponseBody
	public  Map<String,Object> add(BasicOrgVo basicOrgVo) {
		Map<String,Object> map = new HashMap<>();
		try {
			//表单验证
			logger.debug(basicOrgVo.toString());
			BasicOrg basicOrg = new BasicOrg();
			BeanUtils.copyProperties(basicOrgVo, basicOrg);
			basicOrg.setOrgNodecode("node");
			basicOrg.setMemberCode("0000");
			
			logger.debug(basicOrg.toString());
			try {
				basicOrgService.save(basicOrg);
			} catch (Exception e) {
				throw new RuntimeException("11111111");
			}
		
			
			map.put("msg", "ok");
		} catch (Exception e) {
			map.put("msg", "error");
			e.printStackTrace();
			throw new BaseException(ErrorCode.E_SYSB_ORG_ADD.getErrCode(),MessageSourceUtil.getMessage(ErrorCode.E_SYSB_ORG_ADD.getErrCode()));
		}
		return map;
	}
	
	/**
	 * 修改
	 */
	@RequestMapping("/orgManage/update")
	@ResponseBody
	public  Map<String,Object> update(BasicOrgVo basicOrgVo) {
		Map<String,Object> map = new HashMap<>();
		try {
			logger.debug(basicOrgVo.toString());
			BasicOrg basicOrg = new BasicOrg();
			BeanUtils.copyProperties(basicOrgVo, basicOrg);
			basicOrg.setMemberCode("0000");
			logger.debug(basicOrg.toString());
			try {
				int update = basicOrgService.update(basicOrg);
			} catch (Exception e) {
				e.printStackTrace();
				throw new RuntimeException("11111111");
			}
			map.put("msg", "ok");
		} catch (Exception e) {
			map.put("msg", "error");
			e.printStackTrace();
			throw new BaseException(ErrorCode.E_SYSB_ORG_UPDATE.getErrCode(),MessageSourceUtil.getMessage(ErrorCode.E_SYSB_ORG_UPDATE.getErrCode()));
		}
		return map;
	}
	
	/**
	 * 删除
	 */
	@RequestMapping("/orgManage/delete")
	@ResponseBody
	public  Map<String,Object> delete(String org_code) {
		Map<String,Object> map = new HashMap<>();
		try {
			BasicOrg basicOrg = new BasicOrg();
			basicOrg.setMemberCode("0000");
			int delete = basicOrgService.delete(org_code,basicOrg.getMemberCode());
			map.put("msg", "ok");
		} catch (Exception e) {
			map.put("msg", "error");
			throw new BaseException(ErrorCode.E_SYSB_ORG_DELETE.getErrCode(),MessageSourceUtil.getMessage(ErrorCode.E_SYSB_ORG_DELETE.getErrCode()));
		}
		return map;
	}
	
	/**
	 * 查询所有
	 */
	@RequestMapping("/org/queryAll")
	public @ResponseBody BasicResult queryAll() {
		List<BasicOrg> basicOrgList = basicOrgService.queryAll();
		//待处理
		return new BasicResult();
	}
	
	/**
	 * 查询分页(分页)
	 */
	/*@RequestMapping("/org/query")
	public @ResponseBody PageJson query(OrgBeanVo bean, @RequestParam(defaultValue="1") Integer page,
			@RequestParam(defaultValue="15") Integer rows){
		//调用Service接口代理对象，查询商品
		PageJson pageJson = basicOrgService.query(bean,page,rows);
		return pageJson;
	}*/
	@RequestMapping("/orgManage/query")
	@ResponseBody
	public  Map<String,Object> query(){
		Map<String,Object> map = new HashMap<>();
		
		List<BasicOrg> basicOrgList = basicOrgService.queryAll();
		
		map.put("msg", "ok");
		map.put("data", basicOrgList);
		
		return map;
	}
	
	
	
	
	
}
