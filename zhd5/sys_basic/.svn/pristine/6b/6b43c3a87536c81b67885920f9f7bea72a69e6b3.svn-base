package com.xyscm.sys.basic.service;

import java.math.BigDecimal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.xyscm.sys.basic.common.exception.BaseException;
import com.xyscm.sys.basic.dao.BasicWarehouseMapper;

import com.xyscm.sys.basic.model.BasicWarehouse;

/**
 * 
 * 
 * 仓库设置
 * 
 * @author Administrator
 * 
 */
@Service
public class BasicWarehouseService {

	@Autowired
	BasicWarehouseMapper basicWarehouseMapper;

	/**
	 * 根据会员code查询仓库
	 * 
	 * @param memberCode
	 * @return
	 */
	public List<BasicWarehouse> queryAllByMemberCode(String memberCode) {

		List<BasicWarehouse> queryAllByMemberCode = null;

		try {
			queryAllByMemberCode = basicWarehouseMapper
					.queryAllByMemberCode(memberCode);
		} catch (Exception e) {
			e.printStackTrace();
			throw new BaseException("001","查询仓库出错！");
			// TODO Auto-generated catch block
		}

		return queryAllByMemberCode;

	}
	
	
	public List<BasicWarehouse> queryList(BasicWarehouse record) {

		List<BasicWarehouse> queryAllByMemberCode = null;

		try {
			queryAllByMemberCode = basicWarehouseMapper.queryList(record);
					
		} catch (Exception e) {
			e.printStackTrace();
			throw new BaseException("001","查询仓库出错！");
			// TODO Auto-generated catch block
		}

		return queryAllByMemberCode;

	}

	/**
	 * 根据仓库id 更新仓库
	 * 
	 * @param record
	 */

	public int updateByWarehouseId(BasicWarehouse record) {

		int updateByPrimaryKeySelective = 0;
		try {
			updateByPrimaryKeySelective = basicWarehouseMapper
					.updateByPrimaryKeySelective(record);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new BaseException("001","更新仓库出错！");
		}

		return updateByPrimaryKeySelective;
	}
	
	
	/**
	 * 
	 * @param record WAREHOUSE_CODE MemeberCode
	 */
	public void updateWarehouse(BasicWarehouse record){
		
		try {
			basicWarehouseMapper.updateWarehouse(record);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new BaseException("001","更新仓库出错！");
		}
		
	}

	/**
	 * 根据仓库id 和 会员code 删除
	 * 
	 * @param record
	 * @return
	 */
	public int deleteWarehouse(BasicWarehouse record) {

		int deleteWarehouse = 0;
		try {
			deleteWarehouse = basicWarehouseMapper.deleteWarehouse(record);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
			throw new BaseException("001","删除仓库出错！");
		}
		return deleteWarehouse;

	}

	/**
	 * 
	 * @param record WAREHOUSE_CODE MemeberCode
	 */
	public void deleteWarehouseByCode(BasicWarehouse record){
		
		try {
			basicWarehouseMapper.deleteWarehouseByCode(record);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new BaseException("001","删除仓库出错！");
		}
		
	}
	/**
	 * 新增
	 * 
	 * @param record
	 * @return
	 */
	public int saveWarehouse(BasicWarehouse record) {
		int insertSelective = 0;
		try {
			insertSelective = basicWarehouseMapper.insertSelective(record);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			throw new BaseException("001","新增仓库出错！");
		}
		return insertSelective;

	}

}
