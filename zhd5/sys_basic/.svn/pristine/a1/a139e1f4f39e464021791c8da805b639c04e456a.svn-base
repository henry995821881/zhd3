package com.xyscm.sys.basic.controller;

import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.xyscm.sys.basic.model.BasicArea;
import com.xyscm.sys.basic.model.BasicOrg;
import com.xyscm.sys.basic.service.BasicAreaService;

@Controller
public class AreaManageController {
	
	@Autowired
	private BasicAreaService areaService;

	/**
	 * 跳转的地区设置页面
	 * @param request
	 * @param response
	 * @return
	 * @throws ServletException
	 * @throws IOException
	 *
	 * String
	 */
	@RequestMapping("/to_area")
	public String to_area(ServletRequest request,ServletResponse response) {
		
		
		return "/areaManage/areaManage";
	}
	
	/**
	 * 查询所有地区
	 * @param request
	 * @param response
	 * @return
	 *
	 */
	@RequestMapping("/area/queryAllArea")
	@ResponseBody
	public Map<String,Object> queryAllArea(ServletRequest request,ServletResponse response){
		Map<String,Object> map = new HashMap<>();
		List<Map<String,Object>> list = new ArrayList<>();
		
		
		String memberCode = "0000";
		List<BasicArea> One_list = areaService.queryBasicArea(memberCode);	//一级地区
		if(One_list != null && One_list.size() > 0){
			for (BasicArea basicArea : One_list) {
				Map<String,Object> map_list = new HashMap<>();
				map_list.put("first", basicArea);
				String areaParent = basicArea.getAreaCode();
				System.out.println("areaParent="+areaParent);
				List<BasicArea> Two_list = areaService.query2BasicArea(memberCode, areaParent);	//二级地区
				map_list.put("second", Two_list);
				for (BasicArea basicArea2 : Two_list) {
					String areaNodecode = basicArea2.getAreaNodecode();
					List<BasicArea> Three_list = areaService.query3BasicArea(memberCode, areaNodecode);	//三级地区
					map_list.put("third", Three_list);
				}
				list.add(map_list);
			}
		}
	
		map.put("data", list);
		return map;
	}
	
	
	/**
	 * 查看地区
	 * @param request
	 * @param response
	 *
	 * void
	 */
	@RequestMapping("/area/query2BasicArea")
	@ResponseBody
	public Map<String,Object> query2BasicArea(ServletRequest request,ServletResponse response){
		Map<String,Object> map = new HashMap<>();
		String memberCode = "0000";
		String areaNodecode = request.getParameter("areaNodecode");
		List<BasicArea>  list = areaService.query3BasicArea(memberCode, areaNodecode);
		map.put("data", list);
		return map;
	}
	
	
	/**
	 * 查询地区详情
	 * @param request
	 * @param response
	 *
	 * void
	 */
	@RequestMapping("/area/getAreaDetail")
	public BasicArea getAreaDetail(ServletRequest request,ServletResponse response){
		BigDecimal areaId = new BigDecimal(1234);
		BasicArea basicArea = areaService.getAreaDetail(areaId);
		return basicArea;
	}
	
	
	
	/**
	 * 新增地区
	 * @param request
	 * @param response
	 *
	 * void
	 */
	@RequestMapping("/area/insertArea")
	public void insertArea(ServletRequest request,ServletResponse response){
		String areaMnemcode = "";
		String areaName = "";
		String areaParent = "";
		String areaNodecode = "";
		BasicArea basicArea = new BasicArea();
		basicArea.setAreaMnemcode(areaMnemcode);
		basicArea.setAreaName(areaName);
		basicArea.setAreaParent(areaParent);
		basicArea.setAreaNodecode(areaNodecode);
		areaService.insertArea(basicArea);
	}
	
	
	
	
	/**
	 * 编辑地区
	 * @param request
	 * @param response
	 *
	 * void
	 */
	@RequestMapping("/area/updateArea")
	public void updateArea(ServletRequest request,ServletResponse response){
		BasicArea basicArea = new BasicArea();
		BigDecimal areaId = new BigDecimal(1234);
		basicArea.setAreaId(areaId);
		areaService.updateArea(basicArea);
		
	}
	
	
	/**
	 * 删除地区
	 * @param request
	 * @param response
	 *
	 * void
	 */
	@RequestMapping("/area/deleteArea")
	public void deleteArea(ServletRequest request,ServletResponse response){
		String memberCode = "0000";
		String areaNodecode = "";
		areaService.deleteArea(memberCode, areaNodecode);
	}
	
	
	
	
	
	
}
